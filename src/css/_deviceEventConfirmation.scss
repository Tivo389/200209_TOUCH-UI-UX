@charset 'utf-8';

// ELEMENT LEVEL ----------------------------------------------------------------------------------




// CLASS LEVEL ------------------------------------------------------------------------------------
.deviceEventWrapper {
  width: 100%;
}
.locationIndicator {
  width: 44px;
  height: 44px;
  background: rgba(255, 0, 0, 0.4);
  border-radius: 22px;
  left: 0;
  position: absolute;
  top: 0;
  opacity: 0;
  &.active {
    opacity: 1;
  }
}
.statusContainer {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  width: 100%;
  user-select: none;
  .statusElement {
    font-size: 12px;
    color: $colorLightGray;
    font-weight: bolder;
    padding: 0.2em;
    width: 100%;
    & + .statusElement {
      margin: 0;
    }
    &.active {
      color: $colorDarkGray;
    }
    /* 'any-pointer' = Tests if there are ANY pointing devices, and if so, how precise it is. */
    @include cssAnyPointerCoarse {
      &.cssAnyPointerCoarse {
        color: $colorDarkGray;
      }
    }
    @include cssAnyPointerFine {
      &.cssAnyPointerFine {
        color: $colorDarkGray;
      }
    }
    /* 'pointer' = Tests the PRIMARY pointing device. */
    @include cssPointerCoarse {
      &.cssPointerCoarse {
        color: $colorDarkGray;
      }
    }
    @include cssPointerFine {
      &.cssPointerFine {
        color: $colorDarkGray;
      }
    }
    /* 'any-hover' = Tests whether ANY available input mechanism can hover over elements. */
    @include cssAnyHoverNone {
      &.cssAnyHoverNone {
        color: $colorDarkGray;
      }
    }
    @include cssAnyHover {
      &.cssAnyHover {
        color: $colorDarkGray;
      }
    }
    /* 'hover' = Tests whether PRIMARY input mechanism can hover over elements. */
    @include cssHoverNone {
      &.cssHoverNone {
        color: $colorDarkGray;
      }
    }
    @include cssHover {
      &.cssHover {
        color: $colorDarkGray;
      }
    }
  }
}